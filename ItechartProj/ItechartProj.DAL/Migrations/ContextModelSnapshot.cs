// <auto-generated />

using ItechartProj.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ItechartProj.DAL.Migrations
{
    [DbContext(typeof(Context))]
    internal class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItechartProj.DAL.Models.Category", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Categories");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.Comment", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("Likes")
                    .HasColumnType("int");

                b.Property<string>("Login")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("NewsId")
                    .HasColumnType("int");

                b.Property<string>("Text")
                    .IsRequired()
                    .HasColumnType("varchar(1000)");

                b.HasKey("Id");

                b.HasIndex("NewsId");

                b.ToTable("Comments");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.News", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("CategoryID")
                    .HasColumnType("int");

                b.Property<string>("Image")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("SubCategoryId")
                    .HasColumnType("int");

                b.Property<string>("Text")
                    .IsRequired()
                    .HasColumnType("varchar(1000)");

                b.Property<int>("Viewers")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("CategoryID");

                b.HasIndex("SubCategoryId");

                b.ToTable("News");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.Token", b =>
            {
                b.Property<string>("Login")
                    .HasColumnType("nvarchar(15)");

                b.Property<string>("Token")
                    .HasColumnType("varchar(2000)");

                b.HasKey("Login");

                b.ToTable("Token");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.SubCategory", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("CategoryID")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("CategoryID");

                b.ToTable("SubCategories");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.User", b =>
            {
                b.Property<string>("Login")
                    .HasColumnType("nvarchar(15)")
                    .HasMaxLength(15);

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("varchar(200)");

                b.HasKey("Login");

                b.ToTable("Users");
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.Comment", b =>
            {
                b.HasOne("ItechartProj.DAL.Models.News", null)
                    .WithMany("Comments")
                    .HasForeignKey("NewsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.News", b =>
            {
                b.HasOne("ItechartProj.DAL.Models.Category", null)
                    .WithMany("News")
                    .HasForeignKey("CategoryID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("ItechartProj.DAL.Models.SubCategory", null)
                    .WithMany("News")
                    .HasForeignKey("SubCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.Token", b =>
            {
                b.HasOne("ItechartProj.DAL.Models.User", "User")
                    .WithMany()
                    .HasForeignKey("Login")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("ItechartProj.DAL.Models.SubCategory", b =>
            {
                b.HasOne("ItechartProj.DAL.Models.Category", null)
                    .WithMany("SubCategories")
                    .HasForeignKey("CategoryID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}